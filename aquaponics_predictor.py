# -*- coding: utf-8 -*-
"""aquaponics_predictor.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZZIBHFTKYCXIFrFiJIpC1G1e0s2eezcs
"""

import streamlit as st
import pickle
import numpy as np
from sklearn.preprocessing import StandardScaler

# Load the saved model
model_filename = 'saved_model.pkl'
with open(model_filename, 'rb') as file:
    svm_model = pickle.load(file)

# Define the app layout
st.title("Aquaponics Success Prediction")

st.sidebar.header("Enter Physical Parameters")
temperature = st.sidebar.number_input("Temperature (°C)", min_value=0.0, max_value=50.0, step=0.1)
ph = st.sidebar.number_input("pH Level", min_value=0.0, max_value=14.0, step=0.1)
dissolved_oxygen = st.sidebar.number_input("Dissolved Oxygen (mg/L)", min_value=0.0, max_value=20.0, step=0.1)
ammonia = st.sidebar.number_input("Ammonia (mg/L)", min_value=0.0, max_value=10.0, step=0.1)
nitrate = st.sidebar.number_input("Nitrate (mg/L)", min_value=0.0, max_value=100.0, step=0.1)
fish_growth_rate = st.sidebar.number_input("Fish Growth Rate (%)", min_value=0.0, max_value=100.0, step=0.1)
leaf_area = st.sidebar.number_input("Leaf Area (cm²)", min_value=0.0, max_value=1000.0, step=0.1)
yield_ = st.sidebar.number_input("Yield (kg)", min_value=0.0, max_value=1000.0, step=0.1)

# Collect inputs into a feature array
input_features = np.array([[temperature, ph, dissolved_oxygen, ammonia, nitrate, fish_growth_rate, leaf_area, yield_]])

# Standardize inputs (ensure the scaler matches the one used during training)
scaler = StandardScaler()
input_features_scaled = scaler.fit_transform(input_features)  # Adjust this step as per your preprocessing.

# Predict the success rate
if st.button("Predict Success Rate"):
    prediction = svm_model.predict(input_features_scaled)
    success = "Yes" if prediction[0] == "Yes" else "No"
    st.success(f"Predicted Success Class: {success}")